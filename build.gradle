
buildscript {
    ext{
        springBootVersion='3.0.0'
        springBootManagementVersion='1.1.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${springBootManagementVersion}")
    }
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    group = 'top.werls.novel'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'
    repositories {
        mavenCentral()
    }
    ext{
        // version 配置
        gsonVersion= '2.9.0'
        lang3Version = '3.12.0'
        springdocVersion = '2.0.0'
        jwtVersion = '0.11.2'
        bouncycastleVersion = '1.6.13'
        springBootVersion='3.0.0'
        springBootManagementVersion='1.1.0'
        jsoup='1.15.2'
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
            mavenBom("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        }
    }
    dependencies {

        implementation "org.jsoup:jsoup:${jsoup}"
        implementation "com.google.code.gson:gson:${gsonVersion}"
        implementation 'org.apache.commons:commons-lang3:3.12.0'

        // sqlite 依赖
        implementation 'org.hibernate.orm:hibernate-community-dialects:6.1.5.Final'
        runtimeOnly 'org.xerial:sqlite-jdbc:3.36.0.3'

        // mysql
        runtimeOnly 'mysql:mysql-connector-java'

        // spring doc
        // spring doc https://springdoc.org/v2
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.0'

        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
    }
    tasks.named('test') {
        useJUnitPlatform()
    }
}
